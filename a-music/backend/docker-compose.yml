version: "3"

networks:
  dockernet:
    external: true
services:
  user-service:
    environment:
      TOKEN_EXPIRATION: $TOKEN_EXPIRATION
      TOKEN_SECRET: $TOKEN_SECRET
      IMAGES_DIRECTORY_PATH: $IMAGES_DIRECTORY_PATH
      AUTHY_API_KEY: $AUTHY_API_KEY
      SPRING_JPA_SHOW_SQL: $SPRING_JPA_SHOW_SQL
      SPRING_JPA_PROPERTIES_HIBERNATE_TEMP_USE_JDBC_METADATA_DEFAULTS: $SPRING_JPA_PROPERTIES_HIBERNATE_TEMP_USE_JDBC_METADATA_DEFAULTS
      SPRING_PROFILES_ACTIVE: $SPRING_PROFILES_ACTIVE
      SPRING_DATASOURCE_URL: $USER_DB_URL
      SPRING_DATASOURCE_USERNAME: $USER_DB_USERNAME
      SPRING_DATASOURCE_PASSWORD: $USER_DB_PASSWORD
      SERVER_PORT: $USER_SERVICE_SERVER_PORT
      SERVER_SERVLET_CONTEXT_PATH: $USER_SERVICE_SERVLET_CONTEXT_PATH
      SPRING_CLOUD_STREAM_BINDINGS_USER_BINDER: $USER_SERVICE_KAFKA_BINDER
      SPRING_CLOUD_STREAM_BINDINGS_USER_DESTINATION: $USER_SERVICE_KAFKA_DESTINATION
      SPRING_CLOUD_STREAM_BINDINGS_USER_CONTENTTYPE: $USER_SERVICE_KAFKA_CONTENTTYPE
      SPRING_CLOUD_STREAM_BINDINGS_USER_GROUP: $USER_SERVICE_KAFKA_GROUP
      SPRING_CLOUD_STREAM_BINDINGS_USER_PRODUCER_REQUIREDGROUPS: $USER_SERVICE_KAFKA_PRODUCER_REQUIREDGROUPS
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: $USER_SERVICE_KAFKA_BROKERS
      SPRING_CLOUD_STREAM_KAFKA_BINDER_DEFAULT_BROKER_PORT: $USER_SERVICE_KAFKA_DEFAULT_BROKER_PORT
      SPRING_CLOUD_STREAM_KAFKA_BINDER_DEFAULT_ZK_PORT: $USER_SERVICE_KAFKA_DEFAULT_ZK_PORT
      SWAGGER_HOST: $SWAGGER_HOST
      SPRING_MAIL_HOST: $SPRING_MAIL_HOST
      SPRING_MAIL_PORT: $SPRING_MAIL_PORT
      SPRING_MAIL_USERNAME: $SPRING_MAIL_USERNAME
      SPRING_MAIL_PASSWORD: $SPRING_MAIL_PASSWORD
      SPRING_MAIL_PROTOCOL: $SPRING_MAIL_PROTOCOL
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: $SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED: $SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED
      SPRING_SECURITY_OAUTH2_SUCCESSURI: $SPRING_SECURITY_OAUTH2_SUCCESSURI
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FACEBOOK_CLIENT-ID: $SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FACEBOOK_CLIENT_ID
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FACEBOOK_CLIENT-SECRET: $SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FACEBOOK_CLIENT_SECRET
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-ID: $SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-SECRET: $SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT-ID: $SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT-SECRET: $SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET
      ACTIVATING_URI: $ACTIVATING_URI
      PAYPAL_CLIENT-ID: $PAYPAL_CLIENT_ID
      PAYPAL_CLIENT-SECRET: $PAYPAL_CLIENT_SECRET
      PAYPAL_MODE: $PAYPAL_MODE
      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: $SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE
      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: $SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE
      SUBSCRIPTION_URI: $SUBSCRIPTION_URI

    build:
      context: ./user-service
      dockerfile: Dockerfile
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - ~/images:/app/images

  user-db:
    image: postgres:9.5
    environment:
      POSTGRES_PASSWORD: $USER_DB_PASSWORD
    ports:
      - 5434:5432
    restart: always
    volumes:
      - ~/db/postgres/user/data:/var/lib/postgresql/data

  zookeeper:
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 32181:32181

  kafka:
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:29092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms128M"
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - 29092:29092
      - 9092:9092
    depends_on:
      - zookeeper
    restart: on-failure

  mongo:
    container_name: mongo
    image: aashreys/mongo-auth:latest
    env_file:
      - ./music-service/.env
    ports:
      - 27017:27017

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - 9200:9200

  music-service:
    build: ./music-service
    environment:
      TOKEN_SECRET: $TOKEN_SECRET
    depends_on:
      - mongo
      - elasticsearch
      - kafka
    ports:
      - 9001:9001
    links:
      - mongo
      - elasticsearch
      - kafka
    restart: on-failure

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    restart: on-failure

  nginx:
    image: nginx
    ports:
      - 8080:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    depends_on:
      - frontend
